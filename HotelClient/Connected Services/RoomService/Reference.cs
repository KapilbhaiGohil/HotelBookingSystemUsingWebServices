//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelClient.RoomService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/HotelService")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedtypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapasityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bedtype {
            get {
                return this.BedtypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BedtypeField, value) != true)) {
                    this.BedtypeField = value;
                    this.RaisePropertyChanged("Bedtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capasity {
            get {
                return this.CapasityField;
            }
            set {
                if ((this.CapasityField.Equals(value) != true)) {
                    this.CapasityField = value;
                    this.RaisePropertyChanged("Capasity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoomData", Namespace="http://schemas.datacontract.org/2004/07/HotelService")]
    [System.SerializableAttribute()]
    public partial class RoomData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string childrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string headingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adults {
            get {
                return this.adultsField;
            }
            set {
                if ((object.ReferenceEquals(this.adultsField, value) != true)) {
                    this.adultsField = value;
                    this.RaisePropertyChanged("adults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string children {
            get {
                return this.childrenField;
            }
            set {
                if ((object.ReferenceEquals(this.childrenField, value) != true)) {
                    this.childrenField = value;
                    this.RaisePropertyChanged("children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string heading {
            get {
                return this.headingField;
            }
            set {
                if ((object.ReferenceEquals(this.headingField, value) != true)) {
                    this.headingField = value;
                    this.RaisePropertyChanged("heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string price {
            get {
                return this.priceField;
            }
            set {
                if ((object.ReferenceEquals(this.priceField, value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoomService.IRoomService")]
    public interface IRoomService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/GetRooms", ReplyAction="http://tempuri.org/IRoomService/GetRoomsResponse")]
        HotelClient.RoomService.Room[] GetRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/GetRooms", ReplyAction="http://tempuri.org/IRoomService/GetRoomsResponse")]
        System.Threading.Tasks.Task<HotelClient.RoomService.Room[]> GetRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getRoomsByReservationId", ReplyAction="http://tempuri.org/IRoomService/getRoomsByReservationIdResponse")]
        HotelClient.RoomService.RoomData[] getRoomsByReservationId(int resId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getRoomsByReservationId", ReplyAction="http://tempuri.org/IRoomService/getRoomsByReservationIdResponse")]
        System.Threading.Tasks.Task<HotelClient.RoomService.RoomData[]> getRoomsByReservationIdAsync(int resId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getAvailabeRooms", ReplyAction="http://tempuri.org/IRoomService/getAvailabeRoomsResponse")]
        HotelClient.RoomService.Room[] getAvailabeRooms(int noOfRooms, int minCapasity, int[] ConflictedResIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getAvailabeRooms", ReplyAction="http://tempuri.org/IRoomService/getAvailabeRoomsResponse")]
        System.Threading.Tasks.Task<HotelClient.RoomService.Room[]> getAvailabeRoomsAsync(int noOfRooms, int minCapasity, int[] ConflictedResIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getAllEachRoomsByReservationId", ReplyAction="http://tempuri.org/IRoomService/getAllEachRoomsByReservationIdResponse")]
        int[] getAllEachRoomsByReservationId(int rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getAllEachRoomsByReservationId", ReplyAction="http://tempuri.org/IRoomService/getAllEachRoomsByReservationIdResponse")]
        System.Threading.Tasks.Task<int[]> getAllEachRoomsByReservationIdAsync(int rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getAllRoomsByRoomTypeId", ReplyAction="http://tempuri.org/IRoomService/getAllRoomsByRoomTypeIdResponse")]
        int[] getAllRoomsByRoomTypeId(int roomTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getAllRoomsByRoomTypeId", ReplyAction="http://tempuri.org/IRoomService/getAllRoomsByRoomTypeIdResponse")]
        System.Threading.Tasks.Task<int[]> getAllRoomsByRoomTypeIdAsync(int roomTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getFreeRoomIdByRoomHeading", ReplyAction="http://tempuri.org/IRoomService/getFreeRoomIdByRoomHeadingResponse")]
        int getFreeRoomIdByRoomHeading(string heading);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomService/getFreeRoomIdByRoomHeading", ReplyAction="http://tempuri.org/IRoomService/getFreeRoomIdByRoomHeadingResponse")]
        System.Threading.Tasks.Task<int> getFreeRoomIdByRoomHeadingAsync(string heading);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomServiceChannel : HotelClient.RoomService.IRoomService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomServiceClient : System.ServiceModel.ClientBase<HotelClient.RoomService.IRoomService>, HotelClient.RoomService.IRoomService {
        
        public RoomServiceClient() {
        }
        
        public RoomServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HotelClient.RoomService.Room[] GetRooms() {
            return base.Channel.GetRooms();
        }
        
        public System.Threading.Tasks.Task<HotelClient.RoomService.Room[]> GetRoomsAsync() {
            return base.Channel.GetRoomsAsync();
        }
        
        public HotelClient.RoomService.RoomData[] getRoomsByReservationId(int resId) {
            return base.Channel.getRoomsByReservationId(resId);
        }
        
        public System.Threading.Tasks.Task<HotelClient.RoomService.RoomData[]> getRoomsByReservationIdAsync(int resId) {
            return base.Channel.getRoomsByReservationIdAsync(resId);
        }
        
        public HotelClient.RoomService.Room[] getAvailabeRooms(int noOfRooms, int minCapasity, int[] ConflictedResIds) {
            return base.Channel.getAvailabeRooms(noOfRooms, minCapasity, ConflictedResIds);
        }
        
        public System.Threading.Tasks.Task<HotelClient.RoomService.Room[]> getAvailabeRoomsAsync(int noOfRooms, int minCapasity, int[] ConflictedResIds) {
            return base.Channel.getAvailabeRoomsAsync(noOfRooms, minCapasity, ConflictedResIds);
        }
        
        public int[] getAllEachRoomsByReservationId(int rid) {
            return base.Channel.getAllEachRoomsByReservationId(rid);
        }
        
        public System.Threading.Tasks.Task<int[]> getAllEachRoomsByReservationIdAsync(int rid) {
            return base.Channel.getAllEachRoomsByReservationIdAsync(rid);
        }
        
        public int[] getAllRoomsByRoomTypeId(int roomTypeId) {
            return base.Channel.getAllRoomsByRoomTypeId(roomTypeId);
        }
        
        public System.Threading.Tasks.Task<int[]> getAllRoomsByRoomTypeIdAsync(int roomTypeId) {
            return base.Channel.getAllRoomsByRoomTypeIdAsync(roomTypeId);
        }
        
        public int getFreeRoomIdByRoomHeading(string heading) {
            return base.Channel.getFreeRoomIdByRoomHeading(heading);
        }
        
        public System.Threading.Tasks.Task<int> getFreeRoomIdByRoomHeadingAsync(string heading) {
            return base.Channel.getFreeRoomIdByRoomHeadingAsync(heading);
        }
    }
}
